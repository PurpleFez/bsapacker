name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-late

    steps:
    - uses: actions/checkout@v2
    - name: run-cmake
      uses: lukka/run-cmake@v2.5
        # Path to CMakeSettings.json. Used for CMakeSettingsJson mode.
        # cmakeSettingsJsonPath: # optional, default is ${{ github.workspace }}//CMakeSettings.json
        # Select the build configuration, typically Debug or Release. Used by CMakeListsTxtBasic mode.
        cmakeBuildType: Release
        # Specify the CMake generator to use. Possible values: Ninja: Ninja, NinjaMulti: Ninja Multi-Config UnixMakefiles: Unix Makefiles, VS16Win64: Visual Studio 2019 x64, VS16Arm64: Visual Studio 2019 ARM64, VS16Arm: Visual Studio 2019 ARM, VS16Win32: Visual Studio 2019 Win32, VS15Win64: Visual Studio 2017 x64, VS15Arm64: Visual Studio 2017 ARM64, VS15Arm: Visual Studio 2017 ARM, VS15Win32: Visual Studio 2017 Win32. Used by CMakeListsTxtBasic mode.
        cmakeGenerator: Visual Studio 2019 x64
        # Set the build directory, i.e. where CMake generates the build system files. Defaults to `$(Build.ArtifactStagingDirectory)` for CMakeLists.txt, and to `$(Build.ArtifactStagingDirectory)/<configuration-name>` for CMakeSettings.json. Used by any mode.
        buildDirectory: # optional, default is ${{ github.workspace }}/../../_temp
        # Provides a mean to provide all the CMake arguments. This is required when using CMakeLists.txt in Advanced mode. For CMakeSettings.json, the arguments are already inferred, but you can append your arguments providing them here.  Used by CMakeListsTxtAdvanced and CMakeSettingsJson modes.
        cmakeAppendedArgs: # optional, default is 
        # Indicates whether to run 'cmake --build' after CMake project files have been generated successfully. Used by any mode.
        buildWithCMake: # optional, default is true
        # Additional parameters for both CMake and the make program (e.g. ninja or make).  Separate CMake arguments to the native make program arguments with '--', such as: '--clean-first --config Debug -- -j0'. Used by both CMakeListsTxtBasic and CMakeListsTxtAdvanced modes
        buildWithCMakeArgs: # optional, default is 
        # Specify which shell to be used when launching commands. 'true' means the default shell is used. 'false' means no shell is used. It also can be an absolute with arguments of the shell to spawn commands with.
        useShell: # optional, default is true
